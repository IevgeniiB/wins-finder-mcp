[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "wins-finder-mcp"
version = "0.1.0"
description = "MCP Agent that analyzes work activity to generate intelligent weekly accomplishment reports"
requires-python = ">=3.13"
dependencies = [
    # MCP Server (FastMCP for synchronous support)
    "fastmcp==2.11.3",
    
    # HTTP & API calls
    "requests==2.32.5",
    "PyGithub==2.7.0",
    
    # Database
    "sqlalchemy==2.0.43",
    
    # LLM Integration (OpenRouter via OpenAI client)
    "openai==1.101.0",
    
    # Minimal utilities
    "python-dateutil==2.9.0.post0",
    "python-dotenv==1.1.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "coverage>=7.0.0",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[project.scripts]
wins-finder = "wins_finder.__main__:main"

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/wins_finder",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow tests that make external API calls",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/wins_finder"]
omit = [
    "tests/*",
    "src/wins_finder/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstractmethod",
]